---
project:
  title: "Project 1 - Linear Regression on Plasma β-carotene and Personal Factors"
author: 
  - name: "Mattis Ranheim"
    affiliation: "Lund University"
    email: "ranheim.mattis@gmail.com"
format:
  pdf:
    toc: true
    number-sections: true
    fig-cap-location: bottom
    keep-tex: false
    link-citations: true
    mainfont: "Palatino" 
execute:
  echo: false 
  warning: false
  message: false

editor: visual
---

# Project 1 - Report: Linear Regression

## Use of AI Tools

AI tools were used to assist in writing and coding: - **ChatGPT (OpenAI)** was used to clarify statistical concepts, draft parts of code, and suggest text structure. - All code was reviewed, understood, and adapted by the author. - Output was carefully verified for correctness.

Spelling and grammar suggestions from **RStudio Visual Editor** were used.

------------------------------------------------------------------------

## Author Contributions

| Name | Roles |
|---------------------------|---------------------------------------------|
| Mattis Ranheim | Derivations, Analysis, Discussions, Programming, Visualisation, Writing (original draft), Writing (revision & editing), Project Management |

# Introduction

Numerous observational studies have suggested that low dietary intake or low plasma concentrations of β-carotene and other carotenoids may be linked to an increased risk of developing certain types of cancer. However, relatively few studies have examined which factors actually influence plasma concentrations of these micronutrients.

In this project, we analyze data from a cross-sectional study conducted by Nierenberg et al. (1989), where the goal was to investigate the relationship between **personal characteristics**, **dietary intake**, and **plasma concentrations of β-carotene**. The study population consisted of 315 patients who underwent elective surgical procedures to biopsy or remove benign (non-cancerous) lesions in organs such as the lung, colon, breast, skin, ovary, or uterus. For this analysis, we focus exclusively on **plasma β-carotene concentrations** as the outcome of interest.

The study highlights considerable individual variation in plasma β-carotene levels and suggests that much of this variability may be explained by lifestyle and dietary factors.

# Data Description

The dataset used in this project contains **315 observations** and **12 variables**, stored in the file `carotene.xlsx`. Each row corresponds to an individual patient from the study. The variables are described below:

| Variable | Description |
|--------------------------------------|----------------------------------|
| `age` | Age (years) |
| `sex` | Sex (1 = Male, 2 = Female) |
| `smokstat` | Smoking status (1 = Never, 2 = Former, 3 = Current) |
| `bmi` | Body mass index (BMI = weight/height², kg/m²) |
| `vituse` | Vitamin use (1 = Yes, fairly often, 2 = Yes, not often, 3 = No) |
| `calories` | Daily calorie intake (MJ) |
| `fat` | Fat consumed per day (g) |
| `fiber` | Fiber consumed per day (g) |
| `alcohol` | Alcoholic drinks per week |
| `cholesterol` | Daily cholesterol intake (mg) |
| `betadiet` | Dietary β-carotene intake per day (mg) |
| `betaplasma` | **Plasma β-carotene concentration (ng/ml)** — this is the **response variable** we aim to model |

Our objective is to model how `betaplasma` varies as a function of the other variables using a **linear regression model** of the form:

$$
Y_i = \mathbf{x}_i \boldsymbol{\beta} + \varepsilon_i
$$

where $Y_i$ is the plasma β-carotene concentration for individual $i$, $\mathbf{x}_i$ is the vector of explanatory variables, $\boldsymbol{\beta}$ is the vector of unknown regression coefficients, and $\varepsilon_i \sim \mathcal{N}(0, \sigma^2)$ are the error terms.

To satisfy the linear model assumptions (e.g., normality and homoscedasticity of residuals), we may need to apply **suitable transformations** to the response and/or predictor variables throughout the analysis.

# 1. Testing Model Assumptions: Linear vs Log-transformed

We fitted two models to examine the relationship between BMI and plasma β-carotene levels:

-   **Linear model**: `betaplasma ~ bmi`
-   **Log-transformed model**: `log(betaplasma) ~ bmi`

The aim is to assess whether a log-transformation of the outcome variable improves model fit and better satisfies the assumptions of linear regression — particularly **normality of residuals** and **constant variance (homoscedasticity)**.

Below, we compare the two models using **residual plots** and **Q-Q plots** for both. A good model should show no patterns in the residuals vs fitted plot, and the residuals should lie close to the theoretical line in the Q-Q plot.

These graphs show the residual and QQ-plots for the **Linear** and log-trans

```{r}
#Loading the data
library(readxl)
study_data <- read_excel("data/carotene.xlsx") 
```

```{r}
# Linear model (no transformation)
model_lin <- lm(betaplasma ~ bmi, data = study_data)

# Log-transformed model
model_log <- lm(log(betaplasma) ~ bmi, data = study_data)
```

```{r}

library(ggplot2)
library(patchwork)

# Saving Residuals
plot_df_lin <- data.frame(
  fitted = fitted(model_lin),
  resid = resid(model_lin)
  )

plot_df_log <- data.frame(
  fitted = fitted(model_log),
  resid = resid(model_log)
  )

# Linear model plots
p1 <- ggplot(plot_df_lin, aes(x = fitted, y = resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red") +
  labs(title = "Residuals vs Fitted (Linear)", x = "Fitted", y = "Residuals") +
  theme_minimal()

p2 <- ggplot(plot_df_lin, aes(sample = resid)) +
  stat_qq() +
  stat_qq_line(color = "red") +
  labs(title = "Q-Q Plot (Linear)", x = "Theoretical", y = "Sample Quantiles") +
  theme_minimal()

# Log model plots
p3 <- ggplot(plot_df_log, aes(x = fitted, y = resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "blue") +
  labs(title = "Residuals vs Fitted (Log)", x = "Fitted", y = "Residuals") +
  theme_minimal()

p4 <- ggplot(plot_df_log, aes(sample = resid)) +
  stat_qq() +
  stat_qq_line(color = "blue") +
  labs(title = "Q-Q Plot (Log)", x = "Theoretical Quantiles", y = "Sample Quantiles") +
  theme_minimal()


(p1 | p2) / (p3 | p4)

```

The residual plots and Q-Q plots show that the **log-transformed model** produces more homoscedastic residuals and better alignment with the normal distribution in the Q-Q plot. In contrast, the residuals of the linear model display signs of heteroscedasticity and heavier tails.

This suggests that the log transformation stabilizes the variance and brings the residuals closer to normality. Therefore, the **log-transformed model is more suitable** for satisfying the assumptions of linear regression.

## 1.2 Model Estimates

To interpret the relationship between BMI and plasma β-carotene concentration, we present the coefficient estimates from the log-linear model:

The table below shows the **β-estimates** and their associated **95% confidence intervals**. The intercept corresponds to the expected value of log(β-carotene) when BMI is zero (which is not realistic in practice, but needed for the mathematical formulation), while the slope for BMI describes the expected **multiplicative change** in β-carotene concentration for each one-unit increase in BMI.

```{r}

# Create table of estimates + 95% CI
conf_table <- as.data.frame(confint(model_log))
conf_table$Estimate <- coef(model_log)
conf_table <- conf_table[, c("Estimate", "2.5 %", "97.5 %")]

round(conf_table, 4)
```

The estimate for $\beta_1$ is **−0.0359**, with a 95% confidence interval from **−0.0494 to −0.0224**, indicating a statistically significant negative association. This suggests that for every additional unit increase in BMI, the **log of plasma β-carotene decreases**, implying an **approximate 3.5% reduction** in β-carotene levels per BMI unit.

This negative association supports the hypothesis that higher body fat may be linked to lower concentrations of this micronutrient.

### 1.2.2 Linear Model confidence and prediction intervals with Log Transformation and Back-Transformation

To investigate how plasma β-carotene levels relate to BMI, we fit a linear regression model where the outcome was **log-transformed β-carotene concentration**. This transformation helps satisfy linear regression assumptions, especially linearity and homoscedasticity.

Below, we show two plots:

-   The **top plot** shows the relationship between BMI and the log-transformed β-carotene levels, with fitted line, 95% confidence interval, and 95% prediction interval.
-   The **bottom plot** displays the same model but transformed back to the original β-carotene scale (ng/ml). This gives a more intuitive interpretation of the effect in absolute terms.

```{r, message=FALSE, warning=FALSE, fig.width=10, fig.height=7, fig.cap="Log-scale and back-transformed plots with 95% CI and prediction intervals."}


# Prediction grid
bmi_seq <- data.frame(bmi = seq(min(study_data$bmi), max(study_data$bmi), length.out = 100))
pred_ci <- predict(model_log, newdata = bmi_seq, interval = "confidence")
pred_pi <- predict(model_log, newdata = bmi_seq, interval = "prediction")

# Combine into data frame
plot_df <- cbind(bmi_seq, pred_ci,
                 pi_lwr = pred_pi[, "lwr"],
                 pi_upr = pred_pi[, "upr"])

# --- Plot 1: log(betaplasma) vs BMI ---
plot_log <- ggplot() +
  geom_point(data = study_data, aes(x = bmi, y = log(betaplasma)), alpha = 0.6) +
  geom_line(data = plot_df, aes(x = bmi, y = fit), color = "blue") +
  geom_ribbon(data = plot_df, aes(x = bmi, ymin = lwr, ymax = upr), fill = "blue", alpha = 0.3) +
  geom_ribbon(data = plot_df, aes(x = bmi, ymin = pi_lwr, ymax = pi_upr), fill = "gray", alpha = 0.15) +
  labs(title = "Log(β-carotene) vs BMI",
       x = "BMI", y = "log(β-carotene)") +
  theme_minimal()

# --- Back-transform predictions ---
plot_df$fit_exp <- exp(plot_df$fit)
plot_df$lwr_exp <- exp(plot_df$lwr)
plot_df$upr_exp <- exp(plot_df$upr)
plot_df$pi_lwr_exp <- exp(plot_df$pi_lwr)
plot_df$pi_upr_exp <- exp(plot_df$pi_upr)

# --- Plot 2: betaplasma vs BMI (back-transformed) ---
plot_back <- ggplot() +
  geom_point(data = study_data, aes(x = bmi, y = betaplasma), alpha = 0.6) +
  geom_line(data = plot_df, aes(x = bmi, y = fit_exp), color = "blue") +
  geom_ribbon(data = plot_df, aes(x = bmi, ymin = lwr_exp, ymax = upr_exp), fill = "blue", alpha = 0.3) +
  geom_ribbon(data = plot_df, aes(x = bmi, ymin = pi_lwr_exp, ymax = pi_upr_exp), fill = "gray", alpha = 0.15) +
  labs(title = "Plasma β-carotene vs BMI (Back-transformed)",
       x = "BMI", y = "β-carotene (ng/ml)") +
  theme_minimal()

# Display side-by-side
plot_log / plot_back
```

The log-scale plot shows a clearer linear trend and narrower intervals, while the back-transformed version reveals the actual magnitude of plasma β-carotene and illustrates the asymmetry introduced by the exponential function.

These results suggest that BMI is negatively associated with β-carotene levels, and that using a log transformation is appropriate to model this relationship under the assumptions of linear regression.

## 1.3 Estimated Changes in Plasma β-carotene for Changes in BMI

We interpret the log-linear regression model by expressing expected **percentage changes** in plasma β-carotene (ng/ml) for three different BMI changes:

1.  **BMI increased by 1 unit**
2.  **BMI decreased by 1 unit**
3.  **BMI decreased by 10 units**

```{r}
# Extract BMI coefficient and confidence interval
beta1 <- coef(model_log)["bmi"]
beta1_ci <- confint(model_log)["bmi", ]

# Function to compute percent change
pc <- function(b) (exp(b) - 1) * 100

# Compute estimates


change_table <- data.frame(
  `BMI Change` = c("+1", "−1", "−10"),
  `Estimate (%)` = round(c(pc(beta1), pc(-beta1), pc(-10 * beta1)), 2),
  `95% CI Lower (%)` = round(c(pc(beta1_ci[1]), pc(-beta1_ci[2]), pc(-10 * beta1_ci[2])), 2),
  `95% CI Upper (%)` = round(c(pc(beta1_ci[2]), pc(-beta1_ci[1]), pc(-10 * beta1_ci[1])), 2)
)

{ cat("Estimated % change in plasma β-carotene (95% CI)\n\n"); change_table }
```

From the table, we can conclude the following:

-   A **1-unit increase in BMI** is associated with a **3.5% decrease** in plasma β-carotene concentration, with a 95% CI ranging from **−4.8% to −2.2%**.
-   A **1-unit decrease in BMI** leads to an **estimated 3.7% increase** in plasma β-carotene concentration, with a 95% CI ranging from **5.1% to 2.3%**.
-   A **10-unit decrease in BMI** is associated with a **43% increase**, with a 95% CI ranging from **25% to 64%**.

This nonlinear interpretation stems from the exponential structure of the log-linear model: the relationship between BMI and β-carotene becomes **multiplicative**, not additive.

## 1.4 Hypothesis Test for Linear Relationship Between BMI and log(β-carotene)

We test whether there is a statistically significant linear relationship between BMI and plasma β-carotene concentration on the log scale, based on the following hypotheses

-   **Null hypothesis:** $H_0:\beta_1=0$ (no relationship between BMI and log((β-carotene))

-   **Alternative hypothesis**: $H_1:\beta_1\neq0$

We use a **t-test** on the slope coefficient in the linear model. The test statistic follows a **t-distribution** with ( n - 2 ) degrees of freedom.

```{r}
# Get summary of the model
model_summary <- summary(model_log)

# Extract test statistic, degrees of freedom and p-value for the slope
t_stat <- model_summary$coefficients["bmi", "t value"]
df <- model_summary$df[2]  # residual df
p_value <- model_summary$coefficients["bmi", "Pr(>|t|)"]
cat("Test statistic (t):   ", round(t_stat, 2), "\n")
cat("Degrees of freedom:   ", df, "\n")
cat("Two-sided P-value:    ", format.pval(p_value, digits = 4), "\n")

```

Since the **P-value is far less than 0.05**, we **reject the null hypothesis** at the 5% significance level.\
This indicates that **BMI is a statistically significant predictor** of log-transformed plasma β-carotene levels.

The **negative value of the t-statistic** (t = –5.23) along with the **negative slope coefficient** (from earlier results) suggests an **inverse relationship**: as BMI increases, the expected log(β-carotene) concentration tends to decrease.

With **313 degrees of freedom**, the model has a strong basis for inference, and the **very low p-value (3.111e-07)** strengthens the evidence against the null hypothesis.

Thus, we conclude that there is a **statistically and practically significant linear relationship** between BMI and log(β-carotene).

# **2.1 Plasma β-carotene and Smoking Habits**

To investigate how smoking status relates to plasma β-carotene levels, we begin by converting the categorical variable smokstat into a factor variable with meaningful labels:

-   **1** = Never Smoker

-   **2** = Former Smoker

-   **3** = Current Smoker

We then present a frequency table showing the number of individuals in each smoking group, and calculate the mean and standard deviation of both **plasma β-carotene (ng/ml)** and **log-transformed plasma β-carotene** for each group.

These summaries help us understand both the distribution of the smoking status variable and the differences in β-carotene levels across categories.

```{r}
# Convert smokstat to factor with meaningful labels
study_data$smokstat <- factor(study_data$smokstat,
                        levels = c(1, 2, 3),
                        labels = c("Never smoker", "Former smoker", "Current smoker"))

# Frequency table
freq_table <- table(study_data$smokstat)
print("Frequency table for smokstat:")
print(freq_table)

# Calculate mean and SD for betaplasma and log(betaplasma) by smoking group
library(dplyr)

summary_table <- study_data |> 
  group_by(smokstat) |> 
  summarise(
    Count = n(),
    Mean_beta = mean(betaplasma, na.rm = TRUE),
    SD_beta = sd(betaplasma, na.rm = TRUE),
    Mean_log = mean(log(betaplasma), na.rm = TRUE),
    SD_log = sd(log(betaplasma), na.rm = TRUE)
  )

# Show the summary table
print("Summary statistics by smoking category:")
print(summary_table)
```

These summaries will later guide our modeling choices, including the selection of a reference category for regression and whether a log transformation of the response variable remains appropriate when including smokstat as a predictor.

**Reference Category Choice and Distribution Plots**

Given the three smoking categories — *Never smoker*, *Former smoker*, and *Current smoker* — we choose **Never smoker** as the reference category in our regression modeling. This choice is motivated by the following:

• It is the **largest group** (n = 157), ensuring stable estimates when used as baseline.

• It represents a **natural baseline** with respect to exposure — those who have not been exposed to smoking-related influences.

• Comparing other groups (former and current smokers) to this “cleanest” category allows for **straightforward interpretation** of differences in plasma β-carotene levels.

### Boxplots for Smoking Categories

To further assess differences between groups and evaluate the need for transformation, we present boxplots of plasma β-carotene and log-transformed β-carotene across smoking status:

```{r}

# Raw scale
p_beta <- ggplot(study_data, aes(x = smokstat, y = betaplasma, fill = smokstat)) +
  geom_boxplot(alpha = 0.6) +
  labs(title = "Plasma β-carotene by Smoking Status",
       x = "Smoking Status", y = "β-carotene (ng/ml)") +
  theme_minimal() +
  theme(legend.position = "none")

# Log scale
p_log <- ggplot(study_data, aes(x = smokstat, y = log(betaplasma), fill = smokstat)) +
  geom_boxplot(alpha = 0.6) +
  labs(title = "Log(Plasma β-carotene) by Smoking Status",
       x = "Smoking Status", y = "log(β-carotene)") +
  theme_minimal() +
  theme(legend.position = "none")

p_beta / p_log
```

The boxplots reveal substantial skewness and variability in the raw β-carotene values, especially among non-smokers and former smokers. The **log-transformed plot** shows a more symmetric and homoscedastic distribution across groups, supporting the continued use of **log(β-carotene)** as the dependent variable in regression modeling.

## **2.2 Modeling β-carotene and Smoking Status**

**Comparing Reference Categories in Categorical Regression**

We investigate how plasma β-carotene levels (on the log scale) differ across smoking status categories by fitting two versions of a linear regression model:

• In **Model A**, the reference category is **“Never smoker”**

• In **Model B**, the reference category is **“Current smoker”**

```{r}
# Fit model with "Never smoker" as reference category
study_data$smokstat_never <- relevel(study_data$smokstat, ref = "Never smoker")
model_never <- lm(log(betaplasma) ~ smokstat_never, data = study_data)
summary_never <- summary(model_never)

# Fit model with "Current smoker" as reference category
study_data$smokstat_current <- relevel(study_data$smokstat, ref = "Current smoker")
model_current <- lm(log(betaplasma) ~ smokstat_current, data = study_data)
summary_current <- summary(model_current)

# Extract summary tables
cat("Model with 'Never smoker' as reference:\n")
summary_never$coefficients

cat("\nModel with 'Current smoker' as reference:\n")
summary_current$coefficients
```

### **Interpretation of Dummy Coding**

• In both models, the **intercept** represents the mean log(β-carotene) level for the **reference category**.

• The other coefficients represent the difference in mean log(β-carotene) compared to the reference.

• In Model A, the intercept corresponds to “Never smoker”, and the coefficients show how much lower (on average) former or current smokers are.

• In Model B, the intercept corresponds to “Current smoker”, and the coefficients show how much higher never and former smokers are.

### **Which Reference Category Is More Reasonable?**

We argue that **“Never smoker” is the more reasonable reference category**, for several reasons:

1.  **Interpretability**: Using a baseline group that is not affected by the exposure (smoking) allows for clearer interpretation of how smoking status impacts β-carotene levels. It’s more intuitive to interpret how smoking decreases levels relative to a clean baseline (non-smoker).

2.  **Scientific Relevance**: “Never smokers” likely represent the physiological baseline, whereas “Current smokers” are more likely to be a group with altered biology.

3.  **Model Stability**: Model A exhibits **smaller standard errors** for the intercept and slightly more balanced standard errors overall. This suggests more stable estimation around the baseline.

As a result, we will refer to **Model A (with “Never smoker” as the reference)** as **Model 2(b)** in subsequent analyses.

## 2.3 Predicted β-carotene Levels by Smoking Group

To further understand the relationship between smoking habits and plasma β-carotene concentration, we now compute predicted values for each smoking group using both model versions:

-   **Model A**: Uses "Never smoker" as the reference category.
-   **Model B**: Uses "Current smoker" as the reference category.

For each model, we calculate:

-   The **expected log( β-carotene )** level with 95% confidence intervals.
-   The **expected β-carotene (ng/ml)** level on the original scale by back-transforming the predictions (i.e., applying the exponential function).

We compute these predictions for: - Never smokers - Former smokers - Current smokers

```{r}
# Generate prediction data for all three smoking categories
smoking_levels <- levels(study_data$smokstat)
newdata_never <- data.frame(smokstat_never = factor(smoking_levels, levels = smoking_levels))
newdata_current <- data.frame(smokstat_current = factor(smoking_levels, levels = smoking_levels))

# Predict log(betaplasma) and 95% CI using existing models
pred_log_never   <- predict(model_never, newdata = newdata_never, interval = "confidence")
pred_beta_never  <- exp(pred_log_never)

pred_log_current  <- predict(model_current, newdata = newdata_current, interval = "confidence")
pred_beta_current <- exp(pred_log_current)

# Combine results for comparison
results <- data.frame(
  Group = smoking_levels,

  # Log scale predictions
  Log_ModelA_Estimate = round(pred_log_never[, "fit"], 3),
  Log_ModelA_Lower    = round(pred_log_never[, "lwr"], 3),
  Log_ModelA_Upper    = round(pred_log_never[, "upr"], 3),

  Log_ModelB_Estimate = round(pred_log_current[, "fit"], 3),
  Log_ModelB_Lower    = round(pred_log_current[, "lwr"], 3),
  Log_ModelB_Upper    = round(pred_log_current[, "upr"], 3),

  # Back-transformed (original scale)
  Beta_ModelA_Estimate = round(pred_beta_never[, "fit"], 1),
  Beta_ModelA_Lower    = round(pred_beta_never[, "lwr"], 1),
  Beta_ModelA_Upper    = round(pred_beta_never[, "upr"], 1),

  Beta_ModelB_Estimate = round(pred_beta_current[, "fit"], 1),
  Beta_ModelB_Lower    = round(pred_beta_current[, "lwr"], 1),
  Beta_ModelB_Upper    = round(pred_beta_current[, "upr"], 1)
)

print(results)
```

### Interpretation

We see that the predicted values and their 95% confidence intervals are **identical** for both models:

-   For **Never smokers**, the estimated plasma β-carotene level is approximately **156.2 ng/ml** with a 95% CI of **138.8 to 175.7**.
-   For **Former smokers**, the level is approximately **139.9 ng/ml** with a CI of **121.9 to 160.6**.
-   For **Current smokers**, it is around **100.9 ng/ml**, with a CI of **80.5 to 126.3**.

This confirms that **the predictions and their confidence intervals are invariant to the choice of reference level**, as expected. Changing the reference category affects the interpretation of the regression coefficients, but not the actual fitted values or predictions.

These values also align well with the group-wise means from section 2(a), reinforcing that the model provides an appropriate summary of the data.

## 2.4 Testing for Differences Between Smoking Groups

To evaluate whether smoking status has a statistically significant effect on plasma β-carotene levels (on the log scale), we fit the model:

```{r}

# Perform ANOVA (F-test)
anova_result <- anova(model_current)

# View full ANOVA table
print(anova_result)

# Extract values for reporting
f_stat <- anova_result["smokstat", "F value"]
df1 <- anova_result["smokstat", "Df"]
df2 <- anova_result["Residuals", "Df"]
p_val <- anova_result["smokstat", "Pr(>F)"]

cat("\nF-statistic:", round(f_stat, 2), "\n")
cat("Degrees of freedom:", df1, "and", df2, "\n")
cat("P-value:", format.pval(p_val, digits = 4), "\n")
```

We then applied an **ANOVA Global F-test** to compare the group means across the three smoking categories (Never smoker, Former smoker, and Current smoker).

The hypotheses for the test are:

• **Null hypothesis (H₀):** μ₁ = μ₂ = μ₃ — all groups have the same mean log plasma β-carotene level.

• **Alternative hypothesis (H₁):** At least one group has a different mean. The test result gave the following:

• **F-statistic:** 5.75

• **Degrees of freedom:** 2 and 312

• **P-value:** 0.00353

### **Conclusion**

Since the p-value is below the significance level of 0.05, we **reject the null hypothesis**. This indicates that there is a statistically significant difference in mean log plasma β-carotene levels among the different smoking status categories.

# 3.1 Multiple Linear Regression

In this section, we recode the variables \`sex\` and \`vituse\` as categorical (factor) variables with meaningful labels. This is essential for regression modeling, where we interpret coefficients relative to a reference category.

The variable `sex` is originally coded numerically (1 = male, 2 = female). We convert it into a factor with labels `"male"` and `"female"`. Similarly, the variable `vituse` (vitamin use) is coded as 1 = Yes, fairly often, 2 = Yes, not often, 3 = No. We recode this to `"often"`, `"seldom"` and `"no"` respectively.

```{r}

# Setting levels and labels for sex and vitamin use columns
mutate(study_data,
       sex = factor(sex,
                    levels = c(1, 2),
                    labels = c("male", "female")),
       vituse = factor(vituse, 
                       levels = c(1, 2, 3),
                       labels = c("often", "seldom", "no"))) -> study_data

# Studying categorical variables to choose reference category
table(study_data$sex) # "female" many more #obs
table(study_data$vituse) # "often" most #obs, no would make sense in domain
```

The frequency table for sex shows that the majority of individuals in the dataset are female. Therefore, setting "female" as the reference category ensures that comparisons are made against the most common group, improving interpretability and often resulting in lower standard errors.

For vituse, the most common category is "often" (vitamin use fairly often). However, from a domain knowledge perspective, "no" (no vitamin use) makes the most sense as a reference group, because it represents the absence of intervention. This allows interpretation of coefficients as the effect of vitamin use relative to no supplementation, which aligns well with research goals.

## 3.2 Pairwise Correlation Analysis and Outlier Detection

To examine potential multicollinearity and other problems among the continuous predictors, we calculate all pairwise Pearson correlations between the following variables:

```         
•   bmi, age, calories, fat, cholesterol, fiber, alcohol, and betadiet
```

We focus particularly on correlations stronger than ±0.6, which might indicate collinearity issues if both variables are included in the same regression model. The results are visualized in scatterplots for the highly correlated pairs.

```{r}
library(rstatix)
# Cleaning up data-set
study_data <- study_data |> select(-c(smokstat_never, smokstat_current))

# pairwise correlations, which are larger than 0.6
cor_results <- study_data |> select(bmi, age, calories, fat, 
                            cholesterol, fiber, alcohol, betadiet) |>
  cor_test() |>  filter(var1 < var2) |> 
  filter(abs(cor) > 0.6)

cor_results

# we get high correlations between calories/fat, calories/cholesterol and cholesterol/fat

plot1 <- ggplot(study_data) + geom_point(data = study_data, aes(y = calories, x = fat))
plot2 <- ggplot(study_data) + geom_point(data = study_data, aes(y = calories, x = cholesterol))
plot3 <- ggplot(study_data) + geom_point(data = study_data, aes(y = fat, x = cholesterol))

plot1 + plot2 + plot3

# Studying outlier in alcohol consumption
filter(study_data, alcohol >= 200) # Potentially add more comments on this outlier later 

```

The correlation table and scatterplots reveal three particularly strong linear relationships:

```         
•   **Fat and Calories**: r ≈ 0.87

•   **Cholesterol and Calories**: r ≈ 0.66

•   **Cholesterol and Fat**: r ≈ 0.71
```

These variables are highly interrelated, and care should be taken when including them in the same multiple regression model, due to potential multicollinearity.

### 3.2.2 Outlier Analysis

We also identify the individual who reportedly consumes **over 200 alcoholic drinks per week**, which is flagged as a potential outlier. According to the assignment, 12 bottles of vodka per week equates to about 12 MJ/day. We examine whether this person is also extreme in other nutritional dimensions:

This individual not only consumes 203 alcoholic drinks per week, but also has: • Cholesterol intake: 603 mg/day • Fat intake: 164.3 g/day • Calorie intake: 27.9 MJ/day

All of these values are among the highest in the dataset, suggesting this person is an outlier in multiple nutritional variables. This may impact model fitting or residual diagnostics if not accounted for properly.

This individual not only consumes **203 alcoholic drinks per week**, but also has:

```         
•   **Cholesterol intake**: 603 mg/day

•   **Fat intake**: 164.3 g/day

•   **Calorie intake**: 27.9 MJ/day
```

All of these values are among the highest in the dataset, suggesting this person is an outlier in multiple nutritional variables. This may impact model fitting or residual diagnostics if not accounted for properly.

## 3.3 Assessing Multicollinearity with VIF

We now examine whether multicollinearity is an issue in a model where log plasma β-carotene is regressed on all available predictors: bmi, age, calories, fat, cholesterol, fiber, alcohol, betadiet, smokstat, sex, and vituse.

To do this, we compute the Generalized Variance Inflation Factor (GVIF) for each variable. We focus on the adjusted GVIF metric:

$$
\text{GVIF}^{1/(2 \cdot \text{Df})}
$$

A GVIF-adjusted value above **2.24** indicates that more than 80% of the variance in that variable can be explained by the remaining variables, which suggests problematic multicollinearity.

```{r}

# Fitting the data
model_3 <- lm(log(betaplasma) ~ bmi + age + calories + fat + cholesterol + 
                                fiber + alcohol + betadiet + smokstat + sex + vituse,
                                data = study_data)

# we will look at GVIF^(1/2f) > 2.24 for the 50 % in R_j 
library("car")
vif(model_3)
# we see once again that it's fat calories  that are above the threshold
```

As seen above, **calories** and **fat** both exceed the GVIF threshold of 2.24. The strongest multicollinearity is found between these variables, likely due to their strong correlation with each other and with cholesterol (as observed in task 3(b)).

To address this, we remove calories—the most problematic variable—and refit the model to see whether multicollinearity improves.

```{r}
model_3c <- lm(log(betaplasma) ~ bmi + age + fat + cholesterol + 
                                fiber + alcohol + betadiet + smokstat + sex + vituse,
                                data = study_data)

vif(model_3c) # we see that the GVIF values are reasonable, still the highest for fat/cholesterol but ok
```

After removing calories, all GVIF-adjusted values drop below the threshold, indicating no serious multicollinearity remains. The values for fat and cholesterol remain the highest, but are now within an acceptable range.

We conclude that removing calories substantially improves the multicollinearity profile of the model. We call this **Model 3(c)**

## 3.4 Hypothesis Testing and Model Comparison

We now use **Model 3(c)** to test specific hypotheses about the relationships between log-transformed plasma β-carotene and various explanatory variables. First, we interpret the estimated regression coefficients and their confidence intervals, both on the log scale and in the back-transformed domain (i.e., original β-carotene scale).

The table below presents both the log-scale β-estimates and their exponentiated versions (which represent multiplicative effects on the geometric mean of β-carotene), along with 95% confidence intervals:

```{r}
model_3c$coefficients # beta coefficients
exp(model_3c$coefficients) # coefficients in original domain
exp(confint(model_3c)) # confidence intervals of coeffs. in original domain
```

We then examine whether the overall model is significant and conduct **three hypothesis tests**, summarized in the table and discussion below.

**(i) Is there a significant relationship between log plasma β-carotene and BMI, adjusting for other variables?**

This is a **t-test** on the BMI coefficient in Model 3(c), testing:

-   **Null hypothesis**: $H_0: \beta_{BMI} = 0$

-   **Alternative hypothesis**: $H_1: \beta_{BMI} \neq 0$

We extract the result from the model summary:

```{r}
summary(model_3c) # using for statistical tests
```

```         
•   **Test statistic**: t = –4.918

•   **Degrees of freedom**: 302

•   **P-value**: 1.44e-06
```

**Conclusion**: Since the P-value is far below 0.05, we **reject the null hypothesis**. BMI is a statistically significant predictor of log(β-carotene) even after adjusting for other variables.

**(ii) Is this model significantly better than the model from chapter 1 which only used bmi?**

This is an **F-test** comparing **Model 1(b)** (log(β-carotene) \~ bmi) to the full **Model 3(c)**.

-   **Null hypothesis:** $H_0: \beta_{\text{age}} = \beta_{\text{fat}} = \cdots = \beta_{\text{vituse}} = 0$ - All variables except BMI have no added value

-   **Alternative hypothesis:** $H_1:$ At least one of the additional predictors improves the model fit

```{r}
anova(model_3c, model_log) # i
```

-   **F-statistic**: 6.6928

-   **Degrees of freedom**: 10 and 302

-   **P-value**: 1.63e-12

**Conclusion**: We **reject the null hypothesis**. The full model is significantly better than using BMI alone.

**(iii) Is Model 3(c) significantly better than the model from chapter 2, which only used smokstat?**

-   **Null hypothesis:** $H_0: \beta_{\text{bmi}} = \beta_{\text{age}} = \cdots = \beta_{\text{vituse}} = 0$ - All variables except SmokStat have no added value

-   **Alternative hypothesis:** $H_1:$ At least one of the additional predictors improves the model fit

```{r}
anova(model_3c, model_current) # ii
```

-   **F-statistic**: 6.6928

-   **Degrees of freedom**: 10 and 302

-   **P-value**: 1.63e-12

**Conclusion**: Again, we **reject the null hypothesis**. Model 3(c) adds substantial explanatory power beyond smokstat alone.

## 3.5 Residual Diagnostics for Model 3(c)

To assess the adequacy of Model 3(c), we visually inspect the **studentized residuals** using three standard diagnostic plots:

-   A **residuals vs fitted** plot to detect non-linearity and outliers.
-   A **spread-location (scale-location)** plot to assess the assumption of **constant variance** (homoscedasticity).
-   A **Q-Q plot** to evaluate the **normality** of residuals.

These plots help identify potential problems with the model assumptions.

```{r}
# Calculate studentized residuals and fitted values
plot_df_3c <- mutate(study_data,
                            fitted_3c = fitted(model_3c),
                            rstudent_3c = rstudent(model_3c))

# Plot 1: Studentized residuals vs fitted values
p1 <- ggplot(plot_df_3c, aes(x = fitted_3c, y = rstudent_3c)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "gray40") +
  geom_hline(yintercept = c(-2, 2), linetype = "dashed", color = "blue") +
  geom_hline(yintercept = c(-3, 3), linetype = "dotted", color = "red") +
  labs(title = "Studentized Residuals vs Fitted Values",
       x = "Fitted values", y = "Studentized residuals") +
  theme_minimal()

# Plot 2: Square root of absolute residuals (Spread-Location plot)
p2 <- ggplot(plot_df_3c, aes(x = fitted_3c, y = sqrt(abs(rstudent_3c)))) +
  geom_point() +
  geom_hline(yintercept = sqrt(c(0, qnorm(0.75), 2, 3)), linetype = "dashed", color = "gray40") +
  labs(title = "Spread-Location Plot",
       x = "Fitted values", y = expression(sqrt("|studentized residual|"))) +
  theme_minimal()

# Plot 3: Q-Q Plot of studentized residuals
p3 <- ggplot(plot_df_3c, aes(sample = rstudent_3c)) +
  stat_qq(size = 1.5) +
  stat_qq_line(color = "red") +
  labs(title = "Q-Q Plot of Studentized Residuals",
       x = "Theoretical Quantiles", y = "Sample Quantiles") +
  theme_minimal()

# Display plots side by side
(p1 | p2) / p3

```

The **residuals vs fitted** plot shows no clear pattern, suggesting that the linearity assumption is reasonable. A few residuals fall beyond ±3, but these are not numerous enough to suggest a systemic issue.

The **spread-location plot** indicates that the variance of residuals remains fairly constant across the range of fitted values, supporting the assumption of homoscedasticity.

In the **Q-Q plot**, the points generally follow the red reference line, though some deviation is observed in the tails. This indicates slight departure from normality, but not to a degree that would seriously undermine the model.

**Conclusion:** Overall, the diagnostic plots support the adequacy of Model 3(c). The residuals show no major violations of linearity, constant variance, or normality assumptions.

## 3.6. Leverage Analysis for Model 3(c)

We now calculate the leverage values for each observation in Model 3(c) and inspect them visually in two diagnostic plots. High-leverage points can exert substantial influence on the model estimates and are often located far from the "center" of the predictor space.

We include horizontal reference lines at (1/n) (black) and (2(p+1)/n) (red), where (n) is the number of observations and (p+1) is the number of model parameters (including the intercept). Observations with leverage values above the red line should be carefully examined.

```{r}
# Calculate leverage
model_leverage <- data.frame(
  yhat_model_3c = predict(model_3c),
  v_model_3c = hatvalues(model_3c),
  alcohol = study_data$alcohol,
  r_model_3c = rstudent(model_3c)
)

# Identify the number of parameters and observations
pplus1 <- length(coef(model_3c))  # p + 1
n <- nobs(model_3c)

# Highlight colors
highlightcolors <- c("alcohol > 200" = "red", "|r*|>3" = "red")

# Plot 1: Leverage vs linear predictor
ggplot(model_leverage, aes(x = yhat_model_3c, y = v_model_3c)) +
  geom_point(size = 2) +
  geom_hline(yintercept = 1/n, linetype = "dashed") +
  geom_hline(yintercept = 2 * pplus1 / n, color = "red", linetype = "dashed") +
  labs(title = "Model 3(c): Leverage vs Fitted Values",
       caption = "Dashed lines: 1/n (black), 2(p+1)/n (red)",
       y = "Leverage", x = "Fitted values") +
  theme_minimal()

# Plot 2: Leverage vs Alcohol, highlighting extreme alcohol value
ggplot(model_leverage, aes(x = alcohol, y = v_model_3c)) +
  geom_point(size = 2) +
  geom_point(data = filter(model_leverage, alcohol > 200),
             aes(color = "alcohol > 200"), size = 3) +
  geom_hline(yintercept = 1/n, linetype = "dashed") +
  geom_hline(yintercept = 2 * pplus1 / n, color = "red", linetype = "dashed") +
  labs(title = "Model 3(c): Leverage vs Alcohol Consumption",
       caption = "Dashed lines: 1/n (black), 2(p+1)/n (red)",
       y = "Leverage", x = "Alcohol intake (g/day)",
       color = "Highlight") +
  scale_color_manual(values = highlightcolors) +
  theme_minimal()
```

The top-left plot reveals one observation with leverage well above the red line, marking it as potentially influential. When plotted against alcohol consumption, this same observation clearly stands out — it corresponds to the individual consuming over 200 grams of alcohol daily (as previously identified in chapter 3.2.2

This high-leverage point is likely caused by the fact that this individual’s alcohol consumption is extremely distant from all other observations, making them an outlier in the predictor space. As leverage is determined by distance in multivariate predictor space, this makes sense.

## 3.7 Influence Diagnostics: Cook’s Distance and DFBETAS for Model 3(c)

To evaluate the influence of individual observations on the parameter estimates of Model 3(c), we calculate **Cook’s distance** for each observation and visualize it against the fitted values. We also compute **DFBETAS**, which measure how much each regression coefficient changes when an observation is removed.

```{r}
# Add Cook's Distance to a prediction dataframe
model_diagnostics <- study_data |>
  mutate(
    yhat_model3c = predict(model_3c),
    r_model3c = rstudent(model_3c),
    cooksD = cooks.distance(model_3c)
  )

# Define threshold for Cook's Distance
pplus1 <- length(coef(model_3c))
n <- nobs(model_3c)
cook_threshold <- qf(0.5, pplus1, model_3c$df.residual)

# Plot Cook's Distance vs fitted values
ggplot(model_diagnostics, aes(x = yhat_model3c, y = cooksD)) + 
  geom_point(size = 2) +
  geom_point(data = filter(model_diagnostics, alcohol > 200),
             aes(color = "alcohol > 200"), size = 3) +
  geom_hline(yintercept = cook_threshold, color = "purple") +
  geom_hline(yintercept = 4/n, linetype = 2, color = "red") +
  labs(title = "Model 3(c): Cook's Distance vs Fitted Values",
       x = "Fitted values (log β-carotene)",
       y = "Cook's D",
       caption = "Dashed: 4/n (red), Solid: F(0.5, p+1, n-p-1) (purple)",
       color = "Highlight") +
  scale_color_manual(values = c("alcohol > 200" = "blue")) +
  theme_minimal()

# Identify observation with largest Cook's D
top_cook <- model_diagnostics |> slice_max(cooksD, n = 1)
print(top_cook)

# Add selected DFBETAS to diagnostics frame
dfb <- as.data.frame(dfbetas(model_3c))
model_diagnostics <- model_diagnostics |>
  mutate(
    df_intercept = dfb[["(Intercept)"]],
    df_bmi       = dfb[["bmi"]],
    df_chol      = dfb[["cholesterol"]]
  )

# Plot DFBETAS: Impact on Intercept
ggplot(model_diagnostics, aes(x = yhat_model3c, y = df_intercept)) +
  geom_point(size = 2) +
  geom_point(data = filter(model_diagnostics, abs(r_model3c) > 3),
             aes(color = "|r*| > 3"), size = 3) +
  geom_point(data = filter(model_diagnostics, cooksD > 0.1),
             aes(shape = "Cook's D > 0.1"), size = 3) +
  geom_hline(yintercept = c(-1, 1) * sqrt(cook_threshold), color = "red") +
  geom_hline(yintercept = c(-1, 1) * 2 / sqrt(n), color = "red", linetype = "dashed") +
  labs(title = "DFBETAS on Intercept", x = "Fitted values", y = "DFBETAS",
       caption = "Solid: sqrt(F-threshold), Dashed: ±2/√n") +
  theme_minimal() +
  scale_color_manual(values = highlightcolors)

# Plot DFBETAS: Impact on Cholesterol coefficient
ggplot(model_diagnostics, aes(x = yhat_model3c, y = df_chol)) +
  geom_point(size = 2) +
  geom_point(data = filter(model_diagnostics, abs(r_model3c) > 3),
             aes(color = "|r*| > 3"), size = 3) +
  geom_point(data = filter(model_diagnostics, cooksD > 0.1),
             aes(shape = "Cook's D > 0.1"), size = 3) +
  geom_hline(yintercept = c(-1, 1) * sqrt(cook_threshold), color = "red") +
  geom_hline(yintercept = c(-1, 1) * 2 / sqrt(n), color = "red", linetype = "dashed") +
  labs(title = "DFBETAS on Cholesterol", x = "Fitted values", y = "DFBETAS",
       caption = "Solid: sqrt(F-threshold), Dashed: ±2/√n") +
  theme_minimal() +
  scale_color_manual(values = highlightcolors)

# Extract predicted value for heavy drinker
heavy_drinker <- filter(model_diagnostics, alcohol > 200)
heavy_drinker$yhat_model3c
```

```{r}
library("tidyverse")

# Ensure dfbetas are available for all parameters
dfb_full <- as.data.frame(dfbetas(model_3c))

# Add observation ID to diagnostics
model_diagnostics <- model_diagnostics |> 
  mutate(obs_id = row_number())
dfb_full <- dfb_full |> 
  mutate(obs_id = row_number())

# Find the observation with the maximum Cook's distance
max_cook_obs <- model_diagnostics |>
  filter(cooksD == max(cooksD)) |>
  pull(obs_id)

# Extract DFBETAS for this observation
dfb_max <- dfb_full |>
  filter(obs_id == max_cook_obs) |>
  select(-obs_id) |>
  pivot_longer(cols = everything(), names_to = "term", values_to = "dfbeta")

# View and rank by absolute influence
dfb_max |> 
  arrange(desc(abs(dfbeta)))
```

The plots show that **no observations exceed common Cook’s distance thresholds** (either 4/n or the F-distribution-based cutoff). However, the individual with extreme alcohol consumption—over 200g/day—has the **largest leverage**, but has an acceptable and average Cook's distance.

When looking at **DFBETAS**, the same individual has moderate but not extreme influence on both the intercept and the cholesterol coefficient. Since the DFBETAS values do not exceed conventional thresholds (e.g., 2/√n or √F), **there is no strong reason to consider this observation an outlier or to remove it**.

This indicates that although the observation has **high leverage**, it **does not exert undue influence** on the parameter estimates of the model.
